name: Deploy to Docker Hub and AWS

on:
  push:
    branches:
      - dev

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Restore Maven Packages
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('/*.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: |
          docker build \
            --build-arg DATABASE_HOST=${{ secrets.DATABASE_HOST }} \
            --build-arg DATABASE_PORT=${{ secrets.DATABASE_PORT }} \
            --build-arg DATABASE_NAME=${{ secrets.DATABASE_NAME }} \
            --build-arg DATABASE_USER=${{ secrets.DATABASE_USER }} \
            --build-arg DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }} \
            -t jumongweb/devops_task:latest .

      - name: Push Docker image to Docker Hub
        run: docker push jumongweb/devops_task:latest

      - name: Deploy Docker Container on AWS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_HOST }}      # Your AWS instance IP from secrets
          username: ${{ secrets.AWS_USER }}  # SSH username from secrets
          key: ${{ secrets.AWS_KEY }}        # SSH private key from secrets
          port: 22                           # SSH port (default 22)
          script: |
            # Install Docker if not present
            if ! command -v docker &> /dev/null; then
              echo "Docker not found. Installing Docker..."
              curl -fsSL https://get.docker.com -o get-docker.sh
              sudo sh get-docker.sh
            else
              echo "Docker is already installed."
            fi

            echo "Pulling latest Docker image from Docker Hub..."
            sudo docker pull jumongweb/devops_task:latest
            
            # Stop and remove existing container if it exists
            if sudo docker ps -q -f name=devop-container; then
              echo "Stopping existing container..."
              sudo docker stop devop-container
              sudo docker rm devop-container
            fi
            
            echo "Running the new container..."
            sudo docker run -d -p 2020:2020 --name devop-container jumongweb/devops_task:latest
            echo "Container deployed successfully!"
            
            echo "Listing running containers..."
            sudo docker ps
